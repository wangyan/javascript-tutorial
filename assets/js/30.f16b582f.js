(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{442:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("p",[t._v("大多数情况下，运算符和函数会自动将赋予它们的值转换为正确的类型。")]),t._v(" "),a("p",[t._v("比如，"),a("code",[t._v("alert")]),t._v(" 会自动将任何值都转换为字符串以进行显示。算术运算符会将值转换为数字。")]),t._v(" "),a("p",[t._v("在某些情况下，我们需要将值显式地转换为我们期望的类型。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("对象还未纳入讨论中")]),t._v(" "),a("p",[t._v("在本章中，我们不会讨论 object 类型。目前，我们将只学习原始类型。")]),t._v(" "),a("p",[t._v("之后，在我们学习完 object 类型后，我们会在 "),a("a",{attrs:{href:"/object-toprimitive"}},[t._v("对象 — 原始值转换")]),t._v(" 一章中学习对象 — 原始值转换。")])]),t._v(" "),a("h2",{attrs:{id:"字符串转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串转换"}},[t._v("#")]),t._v(" 字符串转换")]),t._v(" "),a("p",[t._v("当我们需要一个字符串形式的值时，就会进行字符串转换。")]),t._v(" "),a("p",[t._v("比如，"),a("code",[t._v("alert(value)")]),t._v(" 将 "),a("code",[t._v("value")]),t._v(" 转换为字符串类型，然后显示这个值。")]),t._v(" "),a("p",[t._v("我们也可以显式地调用 "),a("code",[t._v("String(value)")]),t._v(" 来将 "),a("code",[t._v("value")]),t._v(" 转换为字符串类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n\nvalue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 现在，值是一个字符串形式的 "true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n")])])]),a("p",[t._v("字符串转换最明显。"),a("code",[t._v("false")]),t._v(" 变成 "),a("code",[t._v('"false"')]),t._v("，"),a("code",[t._v("null")]),t._v(" 变成 "),a("code",[t._v('"null"')]),t._v(" 等。")]),t._v(" "),a("h2",{attrs:{id:"数字型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字型转换"}},[t._v("#")]),t._v(" 数字型转换")]),t._v(" "),a("p",[t._v("在算术函数和表达式中，会自动进行 number 类型转换。")]),t._v(" "),a("p",[t._v("比如，当把除法 "),a("code",[t._v("/")]),t._v(" 用于非 number 类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3, string 类型的值被自动转换成 number 类型后进行计算")]),t._v("\n")])])]),a("p",[t._v("我们也可以使用 "),a("code",[t._v("Number(value)")]),t._v(" 显式地将这个 "),a("code",[t._v("value")]),t._v(" 转换为 number 类型。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变成 number 类型 123")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n")])])]),a("p",[t._v("当我们从 string 类型源（如文本表单）中读取一个值，但期望输入一个数字时，通常需要进行显式转换。")]),t._v(" "),a("p",[t._v("如果该字符串不是一个有效的数字，转换的结果会是 "),a("code",[t._v("NaN")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an arbitrary string instead of a number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN，转换失败")]),t._v("\n")])])]),a("p",[t._v("number 类型转换规则：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("变成……")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("undefined")])]),t._v(" "),a("td",[a("code",[t._v("NaN")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("null")])]),t._v(" "),a("td",[a("code",[t._v("0")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("true 和 false")])]),t._v(" "),a("td",[a("code",[t._v("1")]),t._v(" and "),a("code",[t._v("0")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[t._v("去掉首尾空格后的纯数字字符串中含有的数字。如果剩余字符串为空，则转换结果为 "),a("code",[t._v("0")]),t._v("。否则，将会从剩余字符串中“读取”数字。当类型转换出现 error 时返回 "),a("code",[t._v("NaN")]),t._v("。")])])])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"   123   "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// NaN（从字符串“读取”数字，读到 "z" 时出现错误）')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("p",[t._v("请注意 "),a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 在这有点不同："),a("code",[t._v("null")]),t._v(" 变成数字 "),a("code",[t._v("0")]),t._v("，"),a("code",[t._v("undefined")]),t._v(" 变成 "),a("code",[t._v("NaN")]),t._v("。")]),t._v(" "),a("p",[t._v("大多数数学运算符也执行这种转换，我们将在下一节中进行介绍。")]),t._v(" "),a("h2",{attrs:{id:"布尔型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔型转换"}},[t._v("#")]),t._v(" 布尔型转换")]),t._v(" "),a("p",[t._v("布尔（boolean）类型转换是最简单的一个。")]),t._v(" "),a("p",[t._v("它发生在逻辑运算中（稍后我们将进行条件判断和其他类似的东西），但是也可以通过调用 Boolean(value) 显式地进行转换。")]),t._v(" "),a("p",[t._v("转换规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("直观上为“空”的值（如 "),a("code",[t._v("0")]),t._v("、空字符串、"),a("code",[t._v("null")]),t._v("、"),a("code",[t._v("undefined")]),t._v(" 和 "),a("code",[t._v("NaN")]),t._v("）将变为 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("li",[t._v("其他值变成 "),a("code",[t._v("true")]),t._v("。")])]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v('请注意：包含 0 的字符串 "0" 是 true')]),t._v(" "),a("p",[t._v("一些编程语言（比如 PHP）视 "),a("code",[t._v('"0"')]),t._v(" 为 "),a("code",[t._v("false")]),t._v("。但在 JavaScript 中，非空的字符串总是 "),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空白，也是 true（任何非空字符串都是 true）")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("有三种常用的类型转换：转换为 string 类型、转换为 number 类型和转换为 boolean 类型。")]),t._v(" "),a("p",[a("strong",[t._v("字符串转换")]),t._v(" —— 转换发生在输出内容的时候，也可以通过 "),a("code",[t._v("String(value)")]),t._v(" 进行显式转换。原始类型值的 string 类型转换通常是很明显的。")]),t._v(" "),a("p",[a("strong",[t._v("数字型转换")]),t._v(" —— 转换发生在进行算术操作时，也可以通过 "),a("code",[t._v("Number(value)")]),t._v(" 进行显式转换。")]),t._v(" "),a("p",[t._v("数字型转换遵循以下规则：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("变成……")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("undefined")])]),t._v(" "),a("td",[a("code",[t._v("NaN")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("null")])]),t._v(" "),a("td",[a("code",[t._v("0")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("true / false")])]),t._v(" "),a("td",[a("code",[t._v("1 / 0")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("string")])]),t._v(" "),a("td",[t._v("“按原样读取”字符串，两端的空白会被忽略。空字符串变成 "),a("code",[t._v("0")]),t._v("。转换出错则输出 "),a("code",[t._v("NaN")]),t._v("。")])])])]),t._v(" "),a("p",[a("strong",[t._v("布尔型转换")]),t._v(" —— 转换发生在进行逻辑操作时，也可以通过 "),a("code",[t._v("Boolean(value)")]),t._v(" 进行显式转换。")]),t._v(" "),a("p",[t._v("布尔型转换遵循以下规则：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("变成……")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("0")]),t._v(", "),a("code",[t._v("null")]),t._v(", "),a("code",[t._v("undefined")]),t._v(", "),a("code",[t._v("NaN")]),t._v(", "),a("code",[t._v('""')])]),t._v(" "),a("td",[a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[t._v("其他值")]),t._v(" "),a("td",[a("code",[t._v("true")])])])])]),t._v(" "),a("p",[t._v("上述的大多数规则都容易理解和记忆。人们通常会犯错误的值得注意的例子有以下几个：")]),t._v(" "),a("ul",[a("li",[t._v("对 "),a("code",[t._v("undefined")]),t._v(" 进行数字型转换时，输出结果为 "),a("code",[t._v("NaN")]),t._v("，而非 "),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("li",[t._v("对 "),a("code",[t._v('"0"')]),t._v(" 和只有空格的字符串（比如："),a("code",[t._v('" "')]),t._v("）进行布尔型转换时，输出结果为 "),a("code",[t._v("true")]),t._v("。")])]),t._v(" "),a("p",[t._v("我们在本小节没有讲 object 类型的转换。在我们学习完更多关于 JavaScript 的基础知识后，我们会在专门介绍 object 的章节 "),a("a",{attrs:{href:"/object-toprimitive"}},[t._v("对象 — 原始值转换")]),t._v(" 中详细讲解 object 类型转换。")])])}),[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{447:function(t,s,a){"use strict";a.r(s);var e=a(29),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"空值合并运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空值合并运算符"}},[t._v("#")]),t._v(" 空值合并运算符 '??'")]),t._v(" "),a("p",[t._v("空值合并运算符 "),a("code",[t._v("??")]),t._v(" 提供了一种简短的语法，用来获取列表中第一个“已定义”的变量（译注：即值不是 "),a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("undefined")]),t._v(" 的变量）。")]),t._v(" "),a("p",[a("code",[t._v("a ?? b")]),t._v(" 的结果是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("a")]),t._v("，如果 "),a("code",[t._v("a")]),t._v(" 不是 "),a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("undefined")]),t._v("，")]),t._v(" "),a("li",[a("code",[t._v("b")]),t._v("，其他情况。")])]),t._v(" "),a("p",[t._v("所以，"),a("code",[t._v("x = a ?? b")]),t._v(" 是下面这个表达式的简写：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("下面是一个更长一点的例子。")]),t._v(" "),a("p",[t._v("假设，我们有一个用户，变量 "),a("code",[t._v("firstName")]),t._v("、"),a("code",[t._v("lastName")]),t._v(" 和 "),a("code",[t._v("nickName")]),t._v(" 分别对应用户的名字、姓氏和昵称。如果用户决定不输入任何值，那么这些变量都可能是未定义的。")]),t._v(" "),a("p",[t._v('我们想要显示用户的名称：显示这三个变量中的一个，如果都没有设置值，则显示 "Anonymous"。')]),t._v(" "),a("p",[t._v("让我们使用 "),a("code",[t._v("??")]),t._v(" 运算符选择第一个已定义的变量：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nickName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Supercoder"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示第一个不是 null/undefined 的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" lastName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" nickName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Anonymous"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Supercoder")]),t._v("\n")])])]),a("h2",{attrs:{id:"与-比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-比较"}},[t._v("#")]),t._v(" 与 || 比较")]),t._v(" "),a("p",[t._v("或运算符 "),a("code",[t._v("||")]),t._v(" 可以与 "),a("code",[t._v("??")]),t._v(" 运算符以同样的方式使用。正如 "),a("a",{attrs:{href:"/logical-operators#or-finds-the-first-truthy-value"}},[t._v("上一章")]),t._v(" 所讲的，我们可以用 "),a("code",[t._v("||")]),t._v(" 替换上面示例中的 "),a("code",[t._v("??")]),t._v("，也可以获得相同的结果。")]),t._v(" "),a("p",[t._v("重要的区别是：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("||")]),t._v(" 返回第一个 "),a("strong",[t._v("真")]),t._v(" 值。")]),t._v(" "),a("li",[a("code",[t._v("??")]),t._v(" 返回第一个 "),a("strong",[t._v("已定义的")]),t._v(" 值。")])]),t._v(" "),a("p",[t._v("当我们想将 "),a("code",[t._v("null/undefined")]),t._v(" 与 "),a("code",[t._v("0")]),t._v(" 区别对待时，这个区别至关重要。")]),t._v(" "),a("p",[t._v("例如，考虑下面这种情况：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果 "),a("code",[t._v("height")]),t._v(" 未定义，则将其赋值为 "),a("code",[t._v("100")]),t._v("。")]),t._v(" "),a("p",[t._v("让我们将其与 "),a("code",[t._v("||")]),t._v(" 进行比较：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("p",[t._v("在这个例子中，"),a("code",[t._v("height || 100")]),t._v(" 将值为 "),a("code",[t._v("0")]),t._v(" 的 "),a("code",[t._v("height")]),t._v(" 视为未设置的（unset），与 "),a("code",[t._v("null")]),t._v("、"),a("code",[t._v("undefined")]),t._v(" 以及任何其他假（falsy）值同等对待。因此得到的结果是 "),a("code",[t._v("100")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("height ?? 100")]),t._v(" 仅当 "),a("code",[t._v("height")]),t._v(" 确实是 "),a("code",[t._v("null")]),t._v(" 或 "),a("code",[t._v("undefined")]),t._v(" 时才返回 "),a("code",[t._v("100")]),t._v("。因此，"),a("code",[t._v("alert")]),t._v(" 按原样显示了 "),a("code",[t._v("height")]),t._v(" 值 "),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("p",[t._v("哪种行为更好取决于特定的使用场景。当高度 "),a("code",[t._v("0")]),t._v(" 为有效值时，"),a("code",[t._v("??")]),t._v(" 运算符更适合。")]),t._v(" "),a("h2",{attrs:{id:"优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),a("p",[a("code",[t._v("??")]),t._v(" 运算符的优先级相当低：在 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#Table",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN table"),a("OutboundLink")],1),t._v(" 中为 "),a("code",[t._v("5")]),t._v("。")]),t._v(" "),a("p",[t._v("因此，"),a("code",[t._v("??")]),t._v(" 在大多数其他运算之后，但在 "),a("code",[t._v("=")]),t._v(" 和 "),a("code",[t._v("?")]),t._v(" 之前进行运算。")]),t._v(" "),a("p",[t._v("如果我们需要在复杂表达式中使用 "),a("code",[t._v("??")]),t._v(" 进行取值，需要考虑加括号：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重要：使用括号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" area "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5000")]),t._v("\n")])])]),a("p",[t._v("否则，如果我们省略了括号，"),a("code",[t._v("*")]),t._v(" 的优先级比 "),a("code",[t._v("??")]),t._v(" 高，会优先执行。")]),t._v(" "),a("p",[t._v("运算过程将等同于下面这个表达式：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可能不正确的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" area "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这里还有一个相关的语言级别的限制。")]),t._v(" "),a("p",[a("strong",[t._v("出于安全原因，禁止将 "),a("code",[t._v("??")]),t._v(" 运算符与 "),a("code",[t._v("&&")]),t._v(" 和 "),a("code",[t._v("||")]),t._v(" 运算符一起使用。")])]),t._v(" "),a("p",[t._v("下面的代码会触发一个语法错误：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Syntax error")]),t._v("\n")])])]),a("p",[t._v("这个限制无疑是值得商榷的，但是它被添加到语言规范中是为了避免编程错误，因为人们开始使用 "),a("code",[t._v("??")]),t._v(" 替代 "),a("code",[t._v("||")]),t._v("。")]),t._v(" "),a("p",[t._v("可以明确地使用括号来解决这个问题：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 起作用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("空值合并运算符 "),a("code",[t._v("??")]),t._v(" 提供了一种简洁的方式获取列表中“已定义”的值。")]),t._v(" "),a("p",[t._v("它被用于为变量分配默认值：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当 height 的值为 null 或 undefined 时，将 height 的值设置为 100")]),t._v("\nheight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("??")]),t._v(" 运算符的优先级非常低，只略高于 "),a("code",[t._v("?")]),t._v(" 和 "),a("code",[t._v("=")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("如果没有明确添加括号，不能将其与 "),a("code",[t._v("||")]),t._v(" 或 "),a("code",[t._v("&&")]),t._v(" 一起使用。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);
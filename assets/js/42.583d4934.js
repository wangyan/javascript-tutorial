(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{458:function(t,v,_){"use strict";_.r(v);var s=_(29),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"忍者代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#忍者代码"}},[t._v("#")]),t._v(" 忍者代码")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("孔子")]),t._v(" "),_("p",[t._v("学而不思则罔，思而不学则殆。")])]),t._v(" "),_("p",[t._v("过去的程序员忍者使用这些技巧，来使代码维护者的头脑更加敏锐。")]),t._v(" "),_("p",[t._v("代码审查大师在测试任务中寻找它们。")]),t._v(" "),_("p",[t._v("一些新入门的开发者有时候甚至比忍者程序员能够更好地使用它们。")]),t._v(" "),_("p",[t._v("仔细阅读本文，找出你是谁 —— 一个忍者、一个新手、或者一个代码审查者？")]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("检测到讽刺意味")]),t._v(" "),_("p",[t._v("许多人试图追随忍者的脚步。只有极少数成功了。")])]),t._v(" "),_("h2",{attrs:{id:"简洁是智慧的灵魂"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简洁是智慧的灵魂"}},[t._v("#")]),t._v(" 简洁是智慧的灵魂")]),t._v(" "),_("p",[t._v("把代码尽可能写得短。展示出你是多么的聪明啊。")]),t._v(" "),_("p",[t._v("在编程中，多使用一些巧妙的编程语言特性。")]),t._v(" "),_("p",[t._v("例如，看一下这个三元运算符 "),_("code",[t._v("'?'")]),t._v("：")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从一个著名的 JavaScript 库中截取的代码")]),t._v("\ni "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" i "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Math"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),_("p",[t._v("很酷，对吗？如果你这样写了，那些看到这一行代码并尝试去理解 "),_("code",[t._v("i")]),t._v(" 的值是什么的开发者们，就会有一个“快活的”的时光了。然后会来找你寻求答案。")]),t._v(" "),_("p",[t._v("告诉他短一点总是更好的。引导他进入忍者之路。")]),t._v(" "),_("h2",{attrs:{id:"一个字母的变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一个字母的变量"}},[t._v("#")]),t._v(" 一个字母的变量")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("老子（道德经）")]),t._v(" "),_("p",[t._v("道隐无名。夫唯道善贷且成。")])]),t._v(" "),_("p",[t._v("另一个缩减代码量的方法是，到处使用单字母的变量名。例如 "),_("code",[t._v("a")]),t._v("、"),_("code",[t._v("b")]),t._v(" 或 "),_("code",[t._v("c")]),t._v("。")]),t._v(" "),_("p",[t._v("短变量就像森林中真正的忍者一样，一下就找不到了。没有人能够通过编辑器的“搜索”功能找到它。即使有人做到了，他也不能“破译”出变量名 "),_("code",[t._v("a")]),t._v(" 或 "),_("code",[t._v("b")]),t._v(" 到底是什么意思。")]),t._v(" "),_("p",[t._v("……但是有一个例外情况。一个真正的忍者绝不会在 "),_("code",[t._v('"for"')]),t._v(" 循环中使用 "),_("code",[t._v("i")]),t._v(" 作为计数器。在任何地方都可以，但是这里不会用。你随便一找，就能找到很多不寻常的字母。例如 "),_("code",[t._v("x")]),t._v(" 或 "),_("code",[t._v("y")]),t._v("。")]),t._v(" "),_("p",[t._v("使用一个不寻常的变量多酷啊，尤其是在长达 1-2 页（如果可以的话，你可以写得更长）的循环体中使用的时候。如果某人要研究循环内部实现的时候，他就很难很快地找出变量 "),_("code",[t._v("x")]),t._v(" 其实是循环计数器啦。")]),t._v(" "),_("h2",{attrs:{id:"使用缩写"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用缩写"}},[t._v("#")]),t._v(" 使用缩写")]),t._v(" "),_("p",[t._v("如果团队规则中禁止使用一个字母和模糊的命名 — 那就缩短命名，使用缩写吧。")]),t._v(" "),_("p",[t._v("像这样：")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("list")]),t._v(" -> "),_("code",[t._v("lst")])]),t._v(" "),_("li",[_("code",[t._v("userAgent")]),t._v(" -> "),_("code",[t._v("ua")])]),t._v(" "),_("li",[_("code",[t._v("browser")]),t._v(" -> "),_("code",[t._v("brsr")])]),t._v(" "),_("li",[t._v("……等")])]),t._v(" "),_("p",[t._v("只有具有真正良好直觉的人，才能够理解这样的命名。尽可能缩短一切。只有真正有价值的人，才能够维护这种代码的开发。")]),t._v(" "),_("h2",{attrs:{id:"soar-high-抽象化。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#soar-high-抽象化。"}},[t._v("#")]),t._v(" Soar high，抽象化。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("老子（道德经）")]),t._v(" "),_("p",[t._v("大方无隅，"),_("br"),t._v("\n大器晚成，"),_("br"),t._v("\n大音希声，"),_("br"),t._v("\n大象无形。")])]),t._v(" "),_("p",[t._v("当选择一个名字时，尽可能尝试使用最抽象的词语。例如 "),_("code",[t._v("obj")]),t._v("、"),_("code",[t._v("data")]),t._v("、"),_("code",[t._v("value")]),t._v("、"),_("code",[t._v("item")]),t._v(" 和 "),_("code",[t._v("elem")]),t._v(" 等。")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("一个变量的理想名称是 "),_("code",[t._v("data")]),t._v("。")]),t._v(" 在任何能用的地方都使用它。的确，每个变量都持有 "),_("strong",[t._v("数据（data）")]),t._v("，对吧？")]),t._v(" "),_("p",[t._v("……但是 "),_("code",[t._v("data")]),t._v(" 已经用过了怎么办？可以尝试一下 "),_("code",[t._v("value")]),t._v("，它也很普遍。毕竟，一个变量总会有一个 "),_("strong",[t._v("值（value）")]),t._v("，对吧？")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("根据变量的类型为变量命名："),_("code",[t._v("str")]),t._v("、"),_("code",[t._v("num")]),t._v("……")])]),t._v(" "),_("p",[t._v("尝试一下吧。新手可能会诧异 — 这些名字对于忍者来说真的有用吗？事实上，有用的！")]),t._v(" "),_("p",[t._v("一方面，变量名仍然有着一些含义。它说明了变量内是什么：一个字符串、一个数字或是其他的东西。但是当一个局外人试图理解代码时，他会惊讶地发现实际上没有任何有效信息！最终就无法修改你精心思考过的代码。")]),t._v(" "),_("p",[t._v("我们可以通过代码调试，很容易地看出值的类型。但是变量名的含义呢？它存了哪一个字符串或数字？")]),t._v(" "),_("p",[t._v("如果思考的深度不够，是没有办法搞明白的。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("……但是如果找不到更多这样的名字呢？")]),t._v(" 可以加一个数字："),_("code",[t._v("data1, item2, elem5")]),t._v("……")])])]),t._v(" "),_("h2",{attrs:{id:"注意测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注意测试"}},[t._v("#")]),t._v(" 注意测试")]),t._v(" "),_("p",[t._v("只有一个真正细心的程序员才能理解你的代码。但是怎么检验呢？")]),t._v(" "),_("p",[_("strong",[t._v("方式之一 —— 使用相似的变量名，像 "),_("code",[t._v("date")]),t._v(" 和 "),_("code",[t._v("data")]),t._v("。")])]),t._v(" "),_("p",[t._v("尽你所能地将它们混合在一起。")]),t._v(" "),_("p",[t._v("想快速阅读这种代码是不可能的。并且如果有一个错别字时……额……我们卡在这儿好长时间了，到饭点了 (⊙v⊙)。")]),t._v(" "),_("h2",{attrs:{id:"智能同义词"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#智能同义词"}},[t._v("#")]),t._v(" 智能同义词")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("孔子")]),t._v(" "),_("p",[t._v("最难的事情是在黑暗的房间里找到一只黑猫，尤其是如果没有猫。")])]),t._v(" "),_("p",[t._v("对 "),_("strong",[t._v("同一个")]),t._v(" 东西使用 "),_("strong",[t._v("类似")]),t._v(" 的命名，可以使生活更有趣，并且能够展现你的创造力。")]),t._v(" "),_("p",[t._v("例如，函数前缀。如果一个函数的功能是在屏幕上展示一个消息 — 名称可以以 "),_("code",[t._v("display…")]),t._v(" 开头，例如 "),_("code",[t._v("displayMessage")]),t._v("。如果另一个函数展示别的东西，比如一个用户名，名称可以以 "),_("code",[t._v("show…")]),t._v(" 开始（例如 "),_("code",[t._v("showName")]),t._v("）。")]),t._v(" "),_("p",[t._v("暗示这些函数之间有微妙的差异，实际上并没有。")]),t._v(" "),_("p",[t._v("与团队中的其他忍者们达成一个协议：如果张三在他的代码中以 "),_("code",[t._v("display...")]),t._v(" 来开始一个“显示”函数，那么李四可以用 "),_("code",[t._v("render..")]),t._v("，王二可以使用 "),_("code",[t._v("paint...")]),t._v("。你可以发现代码变得多么地有趣多样呀。")]),t._v(" "),_("p",[t._v("……现在是帽子戏法！")]),t._v(" "),_("p",[t._v("对于有非常重要的差异的两个函数 — 使用相同的前缀。")]),t._v(" "),_("p",[t._v("例如，"),_("code",[t._v("printPage(page)")]),t._v(" 函数会使用一个打印机（printer）。"),_("code",[t._v("printText(text)")]),t._v(" 函数会将文字显示到屏幕上。让一个不熟悉的读者来思考一下：“名字为 "),_("code",[t._v("printMessage(message)")]),t._v(" 的函数会将消息放到哪里呢？打印机还是屏幕上？”。为了让代码真正耀眼，"),_("code",[t._v("printMessage(message)")]),t._v(" 应该将消息输出到新窗口中！")]),t._v(" "),_("h2",{attrs:{id:"重用名字"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重用名字"}},[t._v("#")]),t._v(" 重用名字")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("老子（道德经）")]),t._v(" "),_("p",[t._v("始制有名，"),_("br"),t._v("\n名亦既有，"),_("br"),t._v("\n夫亦将知止，"),_("br"),t._v("\n知止可以不殆。")])]),t._v(" "),_("p",[t._v("仅在绝对必要时才添加新变量。")]),t._v(" "),_("p",[t._v("否则，重用已经存在的名字。直接把新值写进变量即可。")]),t._v(" "),_("p",[t._v("在一个函数中，尝试仅使用作为参数传递的变量。")]),t._v(" "),_("p",[t._v("这样就很难确定这个变量的值现在是什么了。也不知道它是从哪里来的。目的是提高阅读代码的人的直觉和记忆力。一个直觉较弱的人必须逐行分析代码，跟踪每个代码分支中的更改。")]),t._v(" "),_("p",[_("strong",[t._v("这个方法的一个进阶方案是，在循环或函数中偷偷地替换掉它的值。")])]),t._v(" "),_("p",[t._v("例如：")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("ninjaFunction")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("elem")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于变量 elem 进行工作的 20 行代码")]),t._v("\n\n  elem "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 又 20 行代码，现在使用的是 clone 后的 elem 变量。")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("p",[t._v("想要在后半部分中使用 "),_("code",[t._v("elem")]),t._v(" 的程序员会感到很诧异……只有在调试期间，检查代码之后，他才会发现他正在使用克隆过的变量！")]),t._v(" "),_("p",[t._v("经常看到这样的代码，即使对经验丰富的忍者来说也是致命的。")]),t._v(" "),_("h2",{attrs:{id:"下划线的乐趣"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#下划线的乐趣"}},[t._v("#")]),t._v(" 下划线的乐趣")]),t._v(" "),_("p",[t._v("在变量名前加上下划线 "),_("code",[t._v("_")]),t._v(" 和 "),_("code",[t._v("__")]),t._v("。例如 "),_("code",[t._v("_name")]),t._v(" 和 "),_("code",[t._v("__value")]),t._v("。如果只有你知道它们的含义，那就非常棒了。或者，加这些下划线只是为了好玩儿，没有任何含义，那就更棒了！")]),t._v(" "),_("p",[t._v("加下划线可谓是一箭双雕。首先，代码变得更长，可读性更低；并且，你的开发者小伙伴可能会花费很长时间，来弄清楚下划线是什么意思。")]),t._v(" "),_("p",[t._v("聪明的忍者会在代码的一个地方使用下划线，然后在其他地方刻意避免使用它们。这会使代码变得更加脆弱，并提高了代码未来出现错误的可能性。")]),t._v(" "),_("h2",{attrs:{id:"展示你的爱"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#展示你的爱"}},[t._v("#")]),t._v(" 展示你的爱")]),t._v(" "),_("p",[t._v("向大家展现一下你那丰富的情感！像 "),_("code",[t._v("superElement")]),t._v("、"),_("code",[t._v("megaFrame")]),t._v(" 和 "),_("code",[t._v("niceItem")]),t._v(" 这样的名字一定会启发读者。")]),t._v(" "),_("p",[t._v("事实上，从一方面来说，看似写了一些东西："),_("code",[t._v("super..")]),t._v("、"),_("code",[t._v("mega..")]),t._v("、"),_("code",[t._v("nice..")]),t._v("。但从另一方面来说 — 并没有提供任何细节。阅读代码的人可能需要耗费一到两个小时的带薪工作时间，冥思苦想来寻找一个隐藏的含义。")]),t._v(" "),_("h2",{attrs:{id:"重叠外部变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重叠外部变量"}},[t._v("#")]),t._v(" 重叠外部变量")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("关尹子")]),t._v(" "),_("p",[t._v("处明者不见暗中一物，"),_("br"),t._v("\n处暗者能见明中区事。")])]),t._v(" "),_("p",[t._v("对函数内部和外部的变量，使用相同的名称。很简单，不用费劲想新的名称。")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("div",{staticClass:"highlight-lines"},[_("div",{staticClass:"highlighted"},[t._v(" ")]),_("br"),_("br"),_("div",{staticClass:"highlighted"},[t._v(" ")]),_("br"),_("br"),_("br"),_("br"),_("br"),_("br"),_("br")]),_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticateUser")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherValue")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("许多行代码"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <-- 某个程序员想要在这里使用 user 变量……")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("p",[t._v("在研究 "),_("code",[t._v("render")]),t._v(" 内部代码的程序员可能不会注意到，有一个内部变量 "),_("code",[t._v("user")]),t._v(" 屏蔽了外部的 "),_("code",[t._v("user")]),t._v(" 变量。")]),t._v(" "),_("p",[t._v("然后他会假设 "),_("code",[t._v("user")]),t._v(" 仍然是外部的变量然后使用它，"),_("code",[t._v("authenticateUser()")]),t._v(" 的结果……陷阱出来啦！你好呀，调试器……")]),t._v(" "),_("h2",{attrs:{id:"无处不在的副作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#无处不在的副作用"}},[t._v("#")]),t._v(" 无处不在的副作用！")]),t._v(" "),_("p",[t._v("有些函数看起来它们不会改变任何东西。例如 "),_("code",[t._v("isReady()")]),t._v("，"),_("code",[t._v("checkPermission()")]),t._v("，"),_("code",[t._v("findTags()")]),t._v("……它们被假定用于执行计算、查找和返回数据，而不会更改任何它们自身之外的数据。这被称为“无副作用”。")]),t._v(" "),_("p",[_("strong",[t._v("一个非常惊喜的技巧就是，除了主要任务之外，给它们添加一个“有用的”行为。")])]),t._v(" "),_("p",[t._v("当你的同事看到被命名为 "),_("code",[t._v("is..")]),t._v("、"),_("code",[t._v("check..")]),t._v(" 或 "),_("code",[t._v("find...")]),t._v(" 的函数改变了某些东西的时候，他脸上肯定是一脸懵逼的表情 — 这会扩大你的理性界限。")]),t._v(" "),_("p",[_("strong",[t._v("另一个惊喜的方式是，返回非标准的结果。")])]),t._v(" "),_("p",[t._v("展示你原来的想法！让调用 "),_("code",[t._v("checkPermission")]),t._v(" 时的返回值不是 "),_("code",[t._v("true/false")]),t._v("，而是一个包含检查结果的复杂对象。")]),t._v(" "),_("p",[t._v("那些尝试写 "),_("code",[t._v("if (checkPermission(..))")]),t._v(" 的开发者，会很疑惑为什么它不能工作。告诉他们：“去读文档吧”。然后给出这篇文章。")]),t._v(" "),_("h2",{attrs:{id:"强大的函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强大的函数"}},[t._v("#")]),t._v(" 强大的函数！")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("老子（道德经）")]),t._v(" "),_("p",[t._v("大道泛兮，"),_("br"),t._v("\n其左可右。")])]),t._v(" "),_("p",[t._v("不要让函数受限于名字中写的内容。拓宽一些。")]),t._v(" "),_("p",[t._v("例如，函数 "),_("code",[t._v("validateEmail(email)")]),t._v(" 可以（除了检查邮件的正确性之外）显示一个错误消息并要求重新输入邮件。")]),t._v(" "),_("p",[t._v("额外的行为在函数名称中不应该很明显。一个真正的忍者会使它们在代码中也不明显。")]),t._v(" "),_("p",[_("strong",[t._v("将多个行为合并到一起，可以保护你的代码不被重用。")])]),t._v(" "),_("p",[t._v("想象一下，另一个开发者只想检查邮箱而不想输出任何信息。你的函数 "),_("code",[t._v("validateEmail(email)")]),t._v(" 对他而言就不合适啦。所以他不会找你问关于这些函数的任何事而打断你的思考。")]),t._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("p",[t._v("上面的所有“建议”都是从真实的代码中提炼而来的……有时候，这些代码是由有经验的开发者写的。也许比你更有经验 ;）")]),t._v(" "),_("ul",[_("li",[t._v("遵从其中的一丢丢，你的代码就会变得充满惊喜。")]),t._v(" "),_("li",[t._v("遵从其中的一大部分，你的代码将真正成为你的代码，没有人会想改变它。")]),t._v(" "),_("li",[t._v("遵从所有，你的代码将成为寻求启发的年轻开发者的宝贵案例。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);
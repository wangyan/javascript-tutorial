(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{379:function(s,t,a){s.exports=a.p+"assets/img/variable.d53d931f.svg"},380:function(s,t,a){s.exports=a.p+"assets/img/variable-change.0c77cefc.svg"},439:function(s,t,a){"use strict";a.r(t);var e=a(29),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),e("p",[s._v("大多数情况下，JavaScript 应用需要处理信息。这有两个例子：")]),s._v(" "),e("ol",[e("li",[s._v("一个网上商店 —— 这里的信息可能包含正在售卖的商品和购物车。")]),s._v(" "),e("li",[s._v("一个聊天应用 —— 这里的信息可能包括用户和消息等等。")])]),s._v(" "),e("p",[s._v("变量就是用来储存这些信息的。")]),s._v(" "),e("h2",{attrs:{id:"变量-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量-2"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Variable_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[s._v("变量"),e("OutboundLink")],1),s._v(" 是数据的“命名存储”。我们可以使用变量来保存商品、访客和其他信息。")]),s._v(" "),e("p",[s._v("在 JavaScript 中创建一个变量，我们需要用到 "),e("code",[s._v("let")]),s._v(" 关键字。")]),s._v(" "),e("p",[s._v("下面的语句创建（也可以称为 "),e("strong",[s._v("声明")]),s._v(" 或者 "),e("strong",[s._v("定义")]),s._v("）了一个名称为 “message” 的变量：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("现在，我们可以通过赋值运算符 "),e("code",[s._v("=")]),s._v(" 为变量添加一些数据：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmessage "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 保存字符串")]),s._v("\n")])])]),e("p",[s._v("现在这个字符串已经保存到与该变量相关联的内存区域了，我们可以通过使用该变量名称访问它：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmessage "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示变量内容")]),s._v("\n")])])]),e("p",[s._v("简洁一点，我们可以将变量定义和赋值合并成一行：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义变量，并且赋值")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hello!")]),s._v("\n")])])]),e("p",[s._v("也可以在一行中声明多个变量：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("看上去代码长度更短，但并不推荐这样。为了更好的可读性，请一行只声明一个变量。")]),s._v(" "),e("p",[s._v("多行变量声明有点长，但更容易阅读：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("一些程序员采用下面的形式书写多个变量：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("……甚至使用“逗号在前”的形式：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'John'")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("技术上讲，这些变体都有一样的效果。所以，这是个个人品味和审美方面的问题。")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("是 var 而不是 let")]),s._v(" "),e("p",[s._v("在较旧的脚本中，你也可能发现另一个关键字 "),e("code",[s._v("var")]),s._v("，而不是 "),e("code",[s._v("let")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("div",{staticClass:"highlight-lines"},[e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[e("code",[s._v("var")]),s._v(" 关键字与 "),e("code",[s._v("let")]),s._v(" "),e("strong",[s._v("大体")]),s._v(" 相同，也用来声明变量，但稍微有些不同，也有点“老派”。")]),s._v(" "),e("p",[e("code",[s._v("let")]),s._v(" 和 "),e("code",[s._v("var")]),s._v(" 之间有些微妙的差别，但目前对于我们来说并不重要。我们将会在 "),e("a",{attrs:{href:"/var"}},[s._v("var")]),s._v(" 章节中介绍它们。")])]),s._v(" "),e("h2",{attrs:{id:"一个现实生活的类比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一个现实生活的类比"}},[s._v("#")]),s._v(" 一个现实生活的类比")]),s._v(" "),e("p",[s._v("如果将变量想象成一个“数据”的盒子，盒子上有一个唯一的标注盒子名字的贴纸。这样我们能更轻松地掌握“变量”的概念。")]),s._v(" "),e("p",[s._v("例如，变量 "),e("code",[s._v("message")]),s._v(" 可以被想象成一个标有 "),e("code",[s._v('"message"')]),s._v(" 的盒子，盒子里面的值为 "),e("code",[s._v('"Hello!"')]),s._v("：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(379),alt:""}})]),s._v(" "),e("p",[s._v("我们可以在盒子内放入任何值。")]),s._v(" "),e("p",[s._v("并且，这个盒子的值，我们想改变多少次，就可以改变多少次：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmessage "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmessage "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'World!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 值改变了")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("当值改变的时候，之前的数据就被从变量中删除了：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(380),alt:""}})]),s._v(" "),e("p",[s._v("我们还可以声明两个变量，然后将其中一个变量的数据拷贝到另一个变量。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hello "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello world!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将字符串 'Hello world' 从变量 hello 拷贝到 message")]),s._v("\nmessage "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 现在两个变量保存着相同的数据")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hello world!")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hello world!")]),s._v("\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("声明两次会触发 error")]),s._v(" "),e("p",[s._v("一个变量应该只被声明一次。")]),s._v(" "),e("p",[s._v("对同一个变量进行重复声明会触发 error：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重复 'let' 会导致 error")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"That"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SyntaxError: 'message' has already been declared")]),s._v("\n")])])]),e("p",[s._v("因此，我们对同一个变量应该只声明一次，之后在不使用 "),e("code",[s._v("let")]),s._v(" 的情况下对其进行引用。")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("函数式语言")]),s._v(" "),e("p",[s._v("有趣的是，也存在禁止更改变量值的 "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Functional_programming",target:"_blank",rel:"noopener noreferrer"}},[s._v("函数式"),e("OutboundLink")],1),s._v(" 编程语言。比如 "),e("a",{attrs:{href:"http://www.scala-lang.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Scala"),e("OutboundLink")],1),s._v(" 或 "),e("a",{attrs:{href:"http://www.erlang.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Erlang"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("在这种类型的语言中，一旦值保存在盒子中，就永远存在。如果你试图保存其他值，它会强制创建一个新盒子（声明一个新变量），无法重用之前的变量。")]),s._v(" "),e("p",[s._v("虽然第一次看上去有点奇怪，但是这些语言有很大的发展潜力。不仅如此，在某些领域，比如并行计算，这个限制有一定的好处。研究这样的一门语言（即使不打算很快就用上它）有助于开阔视野。")])]),s._v(" "),e("h2",{attrs:{id:"变量命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量命名"}},[s._v("#")]),s._v(" 变量命名")]),s._v(" "),e("p",[s._v("JavaScript 的变量命名有两个限制：")]),s._v(" "),e("ol",[e("li",[s._v("变量名称必须仅包含字母，数字，符号 "),e("code",[s._v("$")]),s._v(" 和 "),e("code",[s._v("_")]),s._v("。")]),s._v(" "),e("li",[s._v("首字符必须非数字。")])]),s._v(" "),e("p",[s._v("有效的命名，例如：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" userName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" test123"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("如果命名包括多个单词，通常采用驼峰式命名法（"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/CamelCase",target:"_blank",rel:"noopener noreferrer"}},[s._v("camelCase"),e("OutboundLink")],1),s._v("）。也就是，单词一个接一个，除了第一个单词，其他的每个单词都以大写字母开头："),e("code",[s._v("myVeryLongName")]),s._v("。")]),s._v(" "),e("p",[s._v("有趣的是，美元符号 "),e("code",[s._v("'$'")]),s._v(" 和下划线 "),e("code",[s._v("'_'")]),s._v(" 也可以用于变量命名。它们是正常的符号，就跟字母一样，没有任何特殊的含义。")]),s._v(" "),e("p",[s._v("下面的命名是有效的：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" $ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 使用 "$" 声明一个变量')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 现在用 "_" 声明一个变量')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\n")])])]),e("p",[s._v("下面的变量命名不正确：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不能以数字开始")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" my"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 连字符 '-' 不允许用于变量命名")]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("区分大小写")]),s._v(" "),e("p",[s._v("命名为 "),e("code",[s._v("apple")]),s._v(" 和 "),e("code",[s._v("AppLE")]),s._v(" 的变量是不同的两个变量。")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("允许非英文字母，但不推荐")]),s._v(" "),e("p",[s._v("可以使用任何语言，包括西里尔字母（cyrillic letters）甚至是象形文字，就像这样：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" имя "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" 我 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("从技术上讲，这样没问题。这样的命名是完全允许的，但是用英文进行变量命名是国际惯例。哪怕我们正在写一个很小的脚本，它也有可能会被使用很久。某个时候，来自其他国家的人可能会需要阅读它。")])]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("保留字")]),s._v(" "),e("p",[s._v("有一张 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords",target:"_blank",rel:"noopener noreferrer"}},[s._v("保留字列表"),e("OutboundLink")],1),s._v("，这张表中的保留字无法用作变量命名，因为它们被用于编程语言本身了。")]),s._v(" "),e("p",[s._v("比如，"),e("code",[s._v("let")]),s._v("、"),e("code",[s._v("class")]),s._v("、"),e("code",[s._v("return")]),s._v("、"),e("code",[s._v("function")]),s._v(" 都被保留了。")]),s._v(" "),e("p",[s._v("下面的代码将会抛出一个语法错误：")]),s._v(" "),e("div",{staticClass:"language-js no-beautify extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 不能用 "let" 来命名一个变量，错误！')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 同样，不能使用 "return"，错误！')]),s._v("\n")])])])]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("未采用 use strict 下的赋值")]),s._v(" "),e("p",[s._v("一般，我们需要在使用一个变量前定义它。但是在早期，我们可以不使用 "),e("code",[s._v("let")]),s._v(" 进行变量声明，而可以简单地通过赋值来创建一个变量。现在如果我们不在脚本中使用 "),e("code",[s._v("use strict")]),s._v(" 声明启用严格模式，这仍然可以正常工作，这是为了保持对旧脚本的兼容。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 注意：这个例子中没有 "use strict"')]),s._v("\n\nnum "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 如果变量 "num" 不存在，就会被创建')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5")]),s._v("\n")])])]),e("p",[s._v("上面这是个糟糕的做法，严格模式下会报错。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nnum "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误：num 未定义")]),s._v("\n")])])])]),s._v(" "),e("h2",{attrs:{id:"常量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[s._v("#")]),s._v(" 常量")]),s._v(" "),e("p",[s._v("声明一个常数（不变）变量，可以使用 "),e("code",[s._v("const")]),s._v(" 而非 "),e("code",[s._v("let")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myBirthday "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18.04.1982'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("使用 "),e("code",[s._v("const")]),s._v(" 声明的变量称为“常量”。它们不能被修改，如果你尝试修改就会发现报错：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myBirthday "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18.04.1982'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmyBirthday "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'01.01.2001'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误，不能对常量重新赋值")]),s._v("\n")])])]),e("p",[s._v("当程序员能确定这个变量永远不会改变的时候，就可以使用 "),e("code",[s._v("const")]),s._v(" 来确保这种行为，并且清楚地向别人传递这一事实。")]),s._v(" "),e("h3",{attrs:{id:"大写形式的常数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大写形式的常数"}},[s._v("#")]),s._v(" 大写形式的常数")]),s._v(" "),e("p",[s._v("一个普遍的做法是将常量用作别名，以便记住那些在执行之前就已知的难以记住的值。")]),s._v(" "),e("p",[s._v("使用大写字母和下划线来命名这些常量。")]),s._v(" "),e("p",[s._v("例如，让我们以所谓的“web”（十六进制）格式为颜色声明常量：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_RED")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#F00"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_GREEN")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#0F0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_BLUE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#00F"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_ORANGE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#FF7F00"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ……当我们需要选择一个颜色")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" color "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_ORANGE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// #FF7F00")]),s._v("\n")])])]),e("p",[s._v("好处：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("COLOR_ORANGE")]),s._v(" 比 "),e("code",[s._v('"#FF7F00"')]),s._v(" 更容易记忆。")]),s._v(" "),e("li",[s._v("比起 "),e("code",[s._v("COLOR_ORANGE")]),s._v(" 而言，"),e("code",[s._v('"#FF7F00"')]),s._v(" 更容易输错。")]),s._v(" "),e("li",[s._v("阅读代码时，"),e("code",[s._v("COLOR_ORANGE")]),s._v(" 比 "),e("code",[s._v("#FF7F00")]),s._v(" 更易懂。")])]),s._v(" "),e("p",[s._v("什么时候该为常量使用大写命名，什么时候进行常规命名？让我们弄清楚一点。")]),s._v(" "),e("p",[s._v("作为一个“常数”，意味着值永远不变。但是有些常量在执行之前就已知了（比如红色的十六进制值），还有些在执行期间被“计算”出来，但初始赋值之后就不会改变。")]),s._v(" "),e("p",[s._v("例如：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pageLoadTime "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 网页加载所需的时间 */")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[e("code",[s._v("pageLoadTime")]),s._v(" 的值在页面加载之前是未知的，所以采用常规命名。但是它仍然是个常量，因为赋值之后不会改变。")]),s._v(" "),e("p",[s._v("换句话说，大写命名的常量仅用作“硬编码（hard-coded）”值的别名。")]),s._v(" "),e("h2",{attrs:{id:"正确命名变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正确命名变量"}},[s._v("#")]),s._v(" 正确命名变量")]),s._v(" "),e("p",[s._v("谈到变量，还有一件非常重要的事。")]),s._v(" "),e("p",[s._v("一个变量名应该有一个清晰、明显的含义，对其存储的数据进行描述。")]),s._v(" "),e("p",[s._v("变量命名是编程过程中最重要且最复杂的技能之一。快速地浏览变量的命名就知道代码是一个初学者还是有经验的开发者写的。")]),s._v(" "),e("p",[s._v("在一个实际项目中，大多数的时间都被用来修改和扩展现有的代码库，而不是从头开始写一些完全独立的代码。当一段时间后，我们做完其他事情，重新回到我们的代码，找到命名良好的信息要容易得多。换句话说，变量要有个好名字。")]),s._v(" "),e("p",[s._v("声明变量之前，多花点时间思考它的更好的命名。你会受益良多。")]),s._v(" "),e("p",[s._v("一些可以遵循的规则：")]),s._v(" "),e("ul",[e("li",[s._v("使用易读的命名，比如 "),e("code",[s._v("userName")]),s._v(" 或者 "),e("code",[s._v("shoppingCart")]),s._v("。")]),s._v(" "),e("li",[s._v("离诸如 "),e("code",[s._v("a")]),s._v("、"),e("code",[s._v("b")]),s._v("、"),e("code",[s._v("c")]),s._v(" 这种缩写和短名称远一点，除非你真的知道你在干什么。")]),s._v(" "),e("li",[s._v("变量名在能够准确描述变量的同时要足够简洁。不好的例子就是 "),e("code",[s._v("data")]),s._v(" 和 "),e("code",[s._v("value")]),s._v("，这样的名称等于什么都没说。如果能够非常明显地从上下文知道数据和值所表达的含义，这样使用它们也是可以的。")]),s._v(" "),e("li",[s._v("脑海中的术语要和团队保持一致。如果网站的访客称为“用户”，则我们采用相关的变量命名，比如 "),e("code",[s._v("currentUser")]),s._v(" 或者 "),e("code",[s._v("newUser")]),s._v("，而不要使用 "),e("code",[s._v("currentVisitor")]),s._v(" 或者一个 "),e("code",[s._v("newManInTown")]),s._v("。")])]),s._v(" "),e("p",[s._v("听上去很简单？确实如此，但是在实践中选择一个一目了然的变量名称并非如此简单。大胆试试吧。")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("重用还是新建？")]),s._v(" "),e("p",[s._v("最后一点，有一些懒惰的程序员，倾向于重用现有的变量，而不是声明一个新的变量。")]),s._v(" "),e("p",[s._v("结果是，这个变量就像是被扔进不同东西盒子，但没有改变它的贴纸。现在里面是什么？谁知道呢。我们需要靠近一点，仔细检查才能知道。")]),s._v(" "),e("p",[s._v("这样的程序员节省了一点变量声明的时间，但却在调试代码的时候损失数十倍时间。")]),s._v(" "),e("p",[s._v("额外声明一个变量绝对是利大于弊的。")]),s._v(" "),e("p",[s._v("现代的 JavaScript 压缩器和浏览器都能够很好地对代码进行优化，所以不会产生性能问题。为不同的值使用不同的变量可以帮助引擎对代码进行优化。")])]),s._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[s._v("我们可以使用 "),e("code",[s._v("var")]),s._v("、"),e("code",[s._v("let")]),s._v(" 或 "),e("code",[s._v("const")]),s._v(" 声明变量来存储数据。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("let")]),s._v(" — 现代的变量声明方式。")]),s._v(" "),e("li",[e("code",[s._v("var")]),s._v(" — 老旧的变量声明方式。一般情况下，我们不会再使用它。但是，我们会在 "),e("a",{attrs:{href:"/var"}},[s._v("var")]),s._v(" 章节介绍 "),e("code",[s._v("var")]),s._v(" 和 "),e("code",[s._v("let")]),s._v(" 的微妙差别，以防你需要它们。")]),s._v(" "),e("li",[e("code",[s._v("const")]),s._v(" — 类似于 "),e("code",[s._v("let")]),s._v("，但是变量的值无法被修改。")])]),s._v(" "),e("p",[s._v("变量应当以一种容易理解变量内部是什么的方式进行命名。")]),s._v(" "),e("h2",{attrs:{id:"任务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务"}},[s._v("#")]),s._v(" 任务")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://zh.javascript.info/variables#tasks",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zh.javascript.info/variables#tasks"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"使用变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[s._v("#")]),s._v(" 使用变量")]),s._v(" "),e("ol",[e("li",[s._v("声明两个变量："),e("code",[s._v("admin")]),s._v(" 和 "),e("code",[s._v("name")]),s._v("。")]),s._v(" "),e("li",[s._v("将值 "),e("code",[s._v('"John"')]),s._v(" 赋给 "),e("code",[s._v("name")]),s._v("。")]),s._v(" "),e("li",[s._v("从 "),e("code",[s._v("name")]),s._v(" 变量中拷贝其值给 "),e("code",[s._v("admin")]),s._v("。")]),s._v(" "),e("li",[s._v("使用 "),e("code",[s._v("alert")]),s._v(" 显示 "),e("code",[s._v("admin")]),s._v(' 的值（必须输出 "John"）。')])]),s._v(" "),e("p",[s._v("下面的代码，每一行都对应着任务列表中的对应项。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一次声明两个变量。")]),s._v("\n\nname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nadmin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" admin "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "John"')]),s._v("\n")])])]),e("h3",{attrs:{id:"给出正确的名字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给出正确的名字"}},[s._v("#")]),s._v(" 给出正确的名字")]),s._v(" "),e("ol",[e("li",[s._v("使用我们的星球的名字创建一个变量。你会怎么命名这个变量？")]),s._v(" "),e("li",[s._v("创建一个变量来存储当前浏览者的名字。你会怎么命名这个变量？")])]),s._v(" "),e("p",[e("strong",[s._v("代表我们星球的变量")])]),s._v(" "),e("p",[s._v("这很简单：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ourPlanetName "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Earth"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("注意，我们也可以用一个更简短的名字 "),e("code",[s._v("planet")]),s._v("，但这样可能并不能表达清楚它指的是哪个星球。再啰嗦一点也挺好的。至少让这个变量别太长就行。")]),s._v(" "),e("p",[e("strong",[s._v("网站当前访问者的名字")])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" currentUserName "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("同样，如果我们的确知道用户就是当前的用户的话，我们可以使用更短的变量名 "),e("code",[s._v("userName")]),s._v("。")]),s._v(" "),e("p",[s._v("现代编辑器的自动补全可以让长变量名变得容易编写。不要浪费这个特性。一个名字中包含三个词挺好的。")]),s._v(" "),e("p",[s._v("如果你的编辑器没有合适的自动补全功能，换 "),e("a",{attrs:{href:"/code-editors"}},[s._v("一个新的吧")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"大写的常量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大写的常量"}},[s._v("#")]),s._v(" 大写的常量？")]),s._v(" "),e("p",[s._v("检查下面的代码：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" birthday "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18.04.1982'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("someCode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birthday"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("这里我们有一个 "),e("code",[s._v("birthday")]),s._v(" 日期常量和通过一些代码（为了保持简短这里没有提供，因为这些细节在这无关紧要）从 "),e("code",[s._v("birthday")]),s._v(" 计算出的 "),e("code",[s._v("age")]),s._v(" 常量。")]),s._v(" "),e("p",[s._v("对于 "),e("code",[s._v("birthday")]),s._v(" 使用大写方式正确吗？那么 "),e("code",[s._v("age")]),s._v(" 呢？或者两者都用？")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BIRTHDAY")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18.04.1982'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用大写？")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AGE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("someCode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BIRTHDAY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用大写？")]),s._v("\n")])])]),e("p",[s._v("我们通常用大写字母表示“硬编码（hard-coded）”的常量。或者，换句话说就是，当值在执行之前或在被写入代码的时候，我们就知道值是什么了。")]),s._v(" "),e("p",[s._v("在这个代码中 "),e("code",[s._v("birthday")]),s._v(" 确实是这样的。因此我们可以使用大写。")]),s._v(" "),e("p",[s._v("在对照组中，"),e("code",[s._v("age")]),s._v(" 是在程序运行时计算出的。今天我们有一个年龄，一年以后我们就会有另一个。它在某种意义上不会随着代码的执行而改变。但与 "),e("code",[s._v("birthday")]),s._v(" 相比，它还是有一定的可变性：它是计算出来的，因此我们应该使用小写。")])])}),[],!1,null,null,null);t.default=n.exports}}]);
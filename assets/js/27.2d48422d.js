(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{438:function(t,s,a){"use strict";a.r(s);var e=a(29),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"现代模式-use-strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现代模式-use-strict"}},[t._v("#")]),t._v(' 现代模式，"use strict"')]),t._v(" "),a("p",[t._v("长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。")]),t._v(" "),a("p",[t._v("这么做有利于兼容旧代码，但缺点是 JavaScript 创造者的任何错误或不完善的决定也将永远被保留在 JavaScript 语言中。")]),t._v(" "),a("p",[t._v("这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。你需要一个特殊的指令 —— "),a("code",[t._v('"use strict"')]),t._v(" 来明确地激活这些特性。")]),t._v(" "),a("h2",{attrs:{id:"use-strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-strict"}},[t._v("#")]),t._v(' "use strict"')]),t._v(" "),a("p",[t._v("这个指令看上去像一个字符串 "),a("code",[t._v('"use strict"')]),t._v(" 或者 "),a("code",[t._v("'use strict'")]),t._v("。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码以现代模式工作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("很快我们就会学习到函数（一种组合命令的方式），所以让我们提前注意一下，"),a("code",[t._v('"use strict"')]),t._v(" 可以被放在函数体的开头。这样则可以只在该函数中启用严格模式。但通常人们会在整个脚本中启用严格模式。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v('确保 "use strict" 出现在最顶部')]),t._v(" "),a("p",[t._v("请确保 "),a("code",[t._v('"use strict"')]),t._v(" 出现在脚本的最顶部，否则严格模式可能无法启用。")]),t._v(" "),a("p",[t._v("这里的严格模式就没有被启用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some code"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 下面的 "use strict" 会被忽略，必须在最顶部。')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 严格模式没有被激活")]),t._v("\n")])])]),a("p",[t._v("只有注释可以出现在 "),a("code",[t._v('"use strict"')]),t._v(" 的上面。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("没有办法取消 `use strict`")]),t._v(" "),a("p",[t._v("没有类似于 "),a("code",[t._v('"no use strict"')]),t._v(" 这样的指令可以使程序返回默认模式。")]),t._v(" "),a("p",[t._v("一旦进入了严格模式，就没有回头路了。")])]),t._v(" "),a("h2",{attrs:{id:"浏览器控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器控制台"}},[t._v("#")]),t._v(" 浏览器控制台")]),t._v(" "),a("p",[t._v("当你使用 "),a("a",{attrs:{href:"/devtools"}},[t._v("开发者控制台")]),t._v(" 运行代码时，请注意它默认是不启动 "),a("code",[t._v("use strict")]),t._v(" 的。")]),t._v(" "),a("p",[t._v("有时，当 "),a("code",[t._v("use strict")]),t._v(" 会对代码产生一些影响时，你会得到错误的结果。")]),t._v(" "),a("p",[t._v("那么，怎么在控制台中启用 "),a("code",[t._v("use strict")]),t._v(" 呢？")]),t._v(" "),a("p",[t._v("首先，你可以尝试搭配使用 "),a("code",[t._v("key:Shift+Enter")]),t._v(" 按键去输入多行代码，然后将 "),a("code",[t._v("use strict")]),t._v(" 放在代码最顶部，就像这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Shift"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("Enter 换行"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  ...你的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("按下 Enter 以运行"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("它在大部分浏览器中都有效，像 Firefox 和 Chrome。")]),t._v(" "),a("p",[t._v("如果依然不行，例如你使用的是旧版本的浏览器，那么有一种很丑但可靠的启用 "),a("code",[t._v("use strict")]),t._v(" 的方法。将你的代码放在这样的包装器中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...你的代码...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"我们应该使用-use-strict-吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我们应该使用-use-strict-吗"}},[t._v("#")]),t._v(' 我们应该使用 "use strict" 吗？')]),t._v(" "),a("p",[t._v("这个问题的答案好像很显而易见，但事实并非如此。")]),t._v(" "),a("p",[t._v("有人可能会建议在脚本的最顶部放置 "),a("code",[t._v('"use strict"')]),t._v(" 这行代码…… 但你知道更酷的方式吗？")]),t._v(" "),a("p",[t._v('现代 JavaScript 支持 "classes" 和 "modules" —— 高级语言结构（本教程后续章节会讲到），它们会自动启用 '),a("code",[t._v("use strict")]),t._v("。因此，如果我们使用它们，则无需添加 "),a("code",[t._v('"use strict"')]),t._v(" 指令。")]),t._v(" "),a("p",[a("strong",[t._v("因此，目前我们欢迎将 "),a("code",[t._v('"use strict";')]),t._v(" 写在脚本的顶部。稍后，当你的代码全都写在了 class 和 module 中时，你则可以将 "),a("code",[t._v('"use strict";')]),t._v(" 这行代码省略掉。")])]),t._v(" "),a("p",[t._v("目前，我们已经基本了解了 "),a("code",[t._v("use strict")]),t._v("。")]),t._v(" "),a("p",[t._v("在接下来的章节中，当我们学习语言功能时，我们会看到严格模式与旧的模式之间的差异。幸运的是，差异其实没有那么多。并且，这些差异实际上提升了我们的编程体验。")]),t._v(" "),a("p",[t._v("本教程的所有例子都默认采用严格模式，除非特别指定（非常少）。")])])}),[],!1,null,null,null);s.default=r.exports}}]);